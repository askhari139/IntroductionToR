splitPassword
splitPassword[[1]]
df <- readLines("epl_table.csv")
data("Titanic")
df <- data.frame(Titanic)
write_csv(df, "titanic.csv")
df <- readLines("titanic.csv")
head(df)
df1 <- df[-1] %>% str_split(",") %>% sapply(function(x){x}) %>%
t %>% data.frame
colnames(df1) <- df[1] %>% str_split(",") %>% unlist
View(df1)
head(df)
?simplify
3 %/% 2
5 %/% 2
knitr::opts_chunk$set(echo = TRUE)
df <- read_csv("IPL Matches 2008-2020.csv")
View(df)
d <- df$date[1]
d
class(d)
attr(d)
#17
df <- df %>% mutate(Year = str_remove(date, "-.*"))
#17
df <- df %>% mutate(Biased = ifelse(toss_winner == winner, "Yes", "No"))
#18
df$Biased %>% table
d[1]*100/sum(d)
#18
d <- df$Biased %>% table
d[1]*100/sum(d)
d["Yes"]*100/sum(d)
#19
df$toss_decision %>% table
#20
df %>% ggplot(aes(x = player_of_match), fill = "red") +
geom_bar() +
theme(axis.text.x = element_text(angle = 60),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank())
#20
df %>% ggplot(aes(x = winner), fill = "red") +
geom_bar() +
theme(axis.text.x = element_text(angle = 60),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank())
#20
df %>% ggplot(aes(x = winner), fill = "red") +
geom_bar() +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank())
#22
df1 <- df %>%
group_by(winner, city) %>%
summarise(Count = n())
df1 %>%
filter(winner == "Chennai Super Kings")
df1 %>%
filter(winner == "Chennai Super Kings") %>%
arrange(desc(Count))
df1 %>%
filter(winner == "Royal Challengers Bangalore") %>%
arrange(desc(Count))
df1 %>%
group_by(winner) %>%
summarise(city[which.max(Count)])
reverser <- function(x) {
y <- x
n <- length(x)
for (i in 1:n) {
y[n - i + 1] <- x[i]
}
return(y)
}
reverser(letters)
processor(rep(c("a", "b"), each = 10))
processor <- function(x) {
if (is.numeric(x)) {
c(mean(x), median(x), sd(x))
}
else {
table(x)
}
}
processor(rep(c("a", "b"), each = 10))
3 %% 4
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read_csv("ds_salaries.csv")
#16
ncol(df)
#17
df %>% ggplot(aes(x = salary_in_usd), fill = "red") +
geom_histogram() +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank())
#17
df %>% ggplot(aes(x = salary_in_usd)) +
geom_histogram(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#20
df %>% ggplot(aes(x = winner)) +
geom_bar(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank())
#17
df %>% ggplot(aes(x = salary_in_usd)) +
geom_histogram(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank())
#18
df %>% ggplot(aes(x = salary_in_usd)) +
geom_histogram(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~company_location, ncol = 3)
#18
df %>% ggplot(aes(x = salary_in_usd)) +
geom_histogram(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~job_title, ncol = 3)
#18
df %>% ggplot(aes(x = salary_in_usd)) +
geom_histogram(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~experience_title, ncol = 3)
#18
df %>% ggplot(aes(x = salary_in_usd)) +
geom_histogram(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~experience_level, ncol = 3)
#18
df %>% ggplot(aes(x = salary_in_usd)) +
geom_histogram(fill = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1),
panel.background = element_blank(),
axis.title = element_text(face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~experience_level, ncol = 2)
#18
d <- df %>%
group_by(company_location) %>%
summarise(Avg = mean(salary_in_usd)) %>%
arrange(desc(Avg))
View(d)
#20
df1 <- df %>%
mutate(conversion_rate = salary/salary_in_usd)
#21
df1 %>%
group_by(salary_currency) %>%
summarise(Avg = mean(conversion_rate)) %>%
filter(salary_currency == "INR") %>%
print
#21
df2 <- df1 %>%
group_by(salary_currency) %>%
summarise(Avg = mean(conversion_rate)) %>%
filter(salary_currency == "INR")
print(df2$Avg)
setwd("C:/Users/askha/Downloads")
library(readxl)
fls <- c("Assignment-1_Marks.xls", "Assignment-2_Marks.xls", "Mid_Term_Examination-1_Marks.xls",
"8N6-jGmW.xls")
dfL <- lapply(fls, read_excel)
fls <- c("Assignment-1_Marks.xls", "Assignment-2_Marks.xls", "Mid_Term_Examination-1_Marks.xls",
"qy_PL91L.xls")
dfL <- lapply(fls, read_excel)
dfL <- lapply(fls[-4], read_excel)
View(dfL[[1]])
colnames(dfL[[1]])
dfL <- lapply(fls[-4], read_excel) %>% reduce(merge, by = c("Roll No", "Student Name", "Student Email"))
library(tidyverse)
dfL <- lapply(fls[-4], read_excel) %>% reduce(merge, by = c("Roll No", "Student Name", "Student Email"))
View(dfL)
dfL[is.na(dfL)] <- 13
dfL <- dfL %>% mutate(across(.cols = is.numeric, .fns = sum))
dfL <- dfL %>% mutate(Sum = dfL %>% select(is.numeric) %>% apply(1, sum))
sapply(dfL, class)
write_csv(dfL,"marks.csv")
df <- read_csv("marks.csv")
View(df)
df <- df %>% mutate(Sum = dfL %>% select(is.numeric) %>% apply(1, sum))
df <- df %>% mutate(Sum = df %>% select(is.numeric) %>% apply(1, sum))
ggplot(df, aes(x = Sum))+ geom_histogram()
ggplot(df, aes(x = Sum))+ geom_histogram(bins = 10)
write_csv(df,"marks.csv")
setwd("D:/Github/IntroductionToR/Homeworks")
knitr::opts_chunk$set(echo = TRUE)
dfLines <- read_lines("https://michaelgastner.com/DAVisR_data/homicides.txt")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
x[1]
x <- read_lines("https://michaelgastner.com/DAVisR_data/homicides.txt")
x[1]
install.packages("formatR")
library(formatR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(tidyverse)
write_lines(x[1], file = stdout())
library(formatR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(tidyverse)
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = xfun::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
# Method 1: read_csv
df <- read_csv("https://michaelgastner.com/DAVisR_data/homicides.txt", col_names = F)
ncol(df)
head(df)
# Method 2: read_csv with quote argument
df <- read_csv("https://michaelgastner.com/DAVisR_data/homicides.txt",
quote = "'", col_names = F)
View(df)
# Method 2: read.csv with quote argument
df <- read.csv("https://michaelgastner.com/DAVisR_data/homicides.txt",
header = F, quote = "'")
df <- x %>% str_split(",") %>% data.frame
df <- x %>% str_split(",") %>% sapply(function(x), {x}) %>%
x[1]
str_split("a,s,dd", ",")
# Method 1: read_csv
df <- read_csv("https://michaelgastner.com/DAVisR_data/homicides.txt", col_names = F)
# Method 2: read.csv with quote argument
df2 <- read.csv("https://michaelgastner.com/DAVisR_data/homicides.txt",
header = F, quote = "'")
View(df2)
df <- x %>% str_split(",") %>% sapply(function(x) {x}) %>%
t %>% data.frame
df <- x %>% str_split(",") %>% sapply(function(k) {k}) %>%
t %>% data.frame
df <- x %>% str_split(",")
df <- x %>% str_split(",") %>% sapply(function(k) {k})
# Method 1: read_csv
df <- read_csv("https://michaelgastner.com/DAVisR_data/homicides.txt", col_names = F)
ncol(df)
head(df)
nrow(df)
tail(df)
# Method 2: read.csv with quote argument
df2 <- read.csv("https://michaelgastner.com/DAVisR_data/homicides.txt",
header = F, quote = "'")
ncol(df2)
head(df2)
nrow(df2)
tail(df2)
x <- "http://www.imdb.com/title/tt0449088/?ref_=fn_tt_tt_1"
str_split(x, "/")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read_csv("../Datasets/IMDB_movies/movie_metadata.csv")
View(df)
f1 <- function(x) {
x %>% str_split("/") %>% sapply(function(y) {y[5]})
}
f2 <- function(x) {
x %>% str_extract("tt\\d+/")%>% str_remove("tt") %>% str_remove("/")
}
f3 <- function(x) {
x %>% str_extract("\\d+/") %>% str_remove("/")
}
df <- df %>%
mutate(ID1 = movie_imdb_link %>% f1,
ID2 = movie_imdb_link %>% f2,
ID3 = movie_imdb_link %>% f3)
# All 3 columns have the same ID
all(df$ID1 == df$ID2)
all(df$ID2 == df$ID3)
View(df)
f1 <- function(x) {
x %>% str_split("/") %>% sapply(function(y) {y[5]}) %>% str_remove("tt")
}
f2 <- function(x) {
x %>% str_extract("^tt\\d+/$")%>% str_remove("tt") %>% str_remove("/")
}
f3 <- function(x) {
x %>% str_extract("\\d+/$") %>% str_remove("/")
}
df <- df %>%
mutate(ID1 = movie_imdb_link %>% f1,
ID2 = movie_imdb_link %>% f2,
ID3 = movie_imdb_link %>% f3)
# All 3 columns have the same ID
all(df$ID1 == df$ID2)
all(df$ID2 == df$ID3)
f1 <- function(x) {
x %>% str_split("/") %>% sapply(function(y) {y[5]}) %>% str_remove("tt")
}
f2 <- function(x) {
x %>% str_extract("tt\\d+/")%>% str_remove("tt") %>% str_remove("/")
}
f3 <- function(x) {
x %>% str_extract("\\d+/") %>% str_remove("/")
}
df <- df %>%
mutate(ID1 = movie_imdb_link %>% f1,
ID2 = movie_imdb_link %>% f2,
ID3 = movie_imdb_link %>% f3)
# All 3 columns have the same ID
all(df$ID1 == df$ID2)
all(df$ID2 == df$ID3)
dfCount <- df %>% group_by(ID1) %>% summarise(Count = n())
any(dfCount$Count > 1)
View(dfCount)
dfCount <- df %>% group_by(movie_title, ID1) %>% summarise(Count = n()) %>%
filter(Count > 1)
dfCount
dfCount <- df %>% group_by(movie_title, ID1) %>% summarise(Count = n(), .groups = "drop") %>%
filter(Count > 1) %>%
group_by(ID1) %>%
summarise(countID = sum(Count))
dfCount
dfCount <- df %>% group_by(movie_title, ID1) %>% summarise(Count = n(), .groups = "drop") %>%
filter(Count > 1) %>%
arrange(desc(Count))
dfCount
dfCount <- df %>% group_by(ID1) %>% summarise(Count = n())
any(dfCount$Count > 1)
dfMICount <- df %>% group_by(movie_title, ID1) %>% summarise(Count = n(), .groups = "drop") %>%
filter(Count > 1) %>%
arrange(desc(Count))
dfMICount
View(dfCount)
dfMI_ICount <- dfMICount %>% group_by(ID1) %>%summarise(Count = n()) %>%
filter(Count > 1)
dfMI_ICount
View(df)
keyWords <- df$plot_keywords %>% str_split("|") %>% unlist
keyWords <- df$plot_keywords %>% str_split("|") %>% unlist
keyWordFrequency <- keyWords %>% table %>% sort(decreasing = T)
head(keyWordFrequency)
head(keyWords)
keyWords <- df$plot_keywords[1] %>% str_split("|") %>% unlist
keyWords <- df$plot_keywords %>% str_split("\|") %>% unlist
keyWords <- df$plot_keywords %>% str_split("\\|") %>% unlist
keyWords <- df$plot_keywords %>% str_split("\\|") %>% unlist
keyWordFrequency <- keyWords %>% table %>% sort(decreasing = T)
head(keyWordFrequency)
?str_split
keyWords <- df$plot_keywords %>% str_split(fixed("|"), ) %>% unlist
keyWordFrequency <- keyWords %>% table %>% sort(decreasing = T)
head(keyWordFrequency)
dfMI_MCount <- dfMICount %>% group_by(movie_title) %>%summarise(Count = n()) %>%
filter(Count > 1)
dfMI_MCount
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- df %>% mutate(FirstGenre = genres %>% str_remove("|.*"))
View(df)
df <- df %>% mutate(FirstGenre = genres %>% str_remove("\\|.*"))
df <- df %>% mutate(FirstGenre = genres %>% str_remove("\\|.*"),
FirstGenre2 = genres %>% str_extract(".*\\|") %>% str_remove("\\|"))
all(df$FirstGenre == df$FirstGenre2)
df <- df %>% mutate(FirstGenre = genres %>% str_remove("\\|.*"),
FirstGenre2 = genres %>% str_extract(".+\\|") %>% str_remove("\\|"))
all(df$FirstGenre == df$FirstGenre2)
df <- df %>% mutate(FirstGenre = genres %>% str_remove("\\|.*"),
FirstGenre2 = genres %>% str_extract("\\w\\|") %>% str_remove("\\|"))
all(df$FirstGenre == df$FirstGenre2)
df <- df %>% mutate(FirstGenre = genres %>% str_remove("\\|.*"),
FirstGenre2 = genres %>% str_extract("\\w+\\|") %>% str_remove("\\|"))
all(df$FirstGenre == df$FirstGenre2)
df %>% group_by(director_name) %>%
summarise(Mean_score = mean(imdb_score, na.rm = T)) %>%
arrange(desc(Mean_score)) %>%
head(5)
View(df)
dfCountry <- df %>% filter(language == "English") %>%
group_by(country) %>%
summarise(Mean_score = mean(imdb_score))
#i)
ggplot(dfCountry, aes(x = Mean_score)) + geom_histogram()
#ii)
ggplot(dfCountry, aes(x = Mean_score)) + geom_histogram() +
geom_vline(xintercept = mean(dfCountry$Mean_score), color = "red")
dfCountry <- df %>% filter(language == "English") %>%
group_by(country) %>%
summarise(Mean_score = mean(imdb_score))
#i)
ggplot(dfCountry, aes(x = Mean_score)) + geom_histogram()
#ii)
ggplot(dfCountry, aes(x = Mean_score)) + geom_histogram() +
geom_vline(xintercept = mean(dfCountry$Mean_score), color = "red")
#iii)
ggplot(dfCounty, aes(x = reorder(country, -Mean_score), y = Mean_score)) +
geom_bar(stat = "identity") +
labs(x = "Country") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1))
dfCountry <- df %>% filter(language == "English") %>%
group_by(country) %>%
summarise(Mean_score = mean(imdb_score))
#i)
ggplot(dfCountry, aes(x = Mean_score)) + geom_histogram()
#ii)
ggplot(dfCountry, aes(x = Mean_score)) + geom_histogram() +
geom_vline(xintercept = mean(dfCountry$Mean_score), color = "red")
#iii)
ggplot(dfCountry, aes(x = reorder(country, -Mean_score), y = Mean_score)) +
geom_bar(stat = "identity") +
labs(x = "Country") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1))
paste0("The number of cities is ", nrow(df))
paste0("The number of quality indices is ", ncol(df)-1)
df <- read_csv("../Datasets/quality_of_life.csv")
paste0("The number of cities is ", nrow(df))
paste0("The number of quality indices is ", ncol(df)-1)
colnames(df) <- colnames(df) %>% str_replace_all(" ", "_")
df2 <- df %>% arrange(City)
df2 <- df %>% arrange(City)
View(df2)
indices <- colnames(df)[-c(1,2)]
sapply(indices, function(x) {
df3 <- df %>% arrange(desc(x))
all(df3 == df)
})
indices <- colnames(df)[-c(1,2)]
sapply(indices, function(x) {
browser()
df3 <- df %>% arrange(desc(x))
all(df3 == df)
})
df3 == df
View(df3)
indices
df3 <- df %>% arrange(desc(x))
all(df3 == df)
View(df3)
x
indices <- colnames(df)[-c(1,2)]
sapply(indices, function(x) {
df3 <- df %>% arrange(desc(all_of(x)))
all(df3 == df)
})
indices <- colnames(df)[-c(1,2)]
sapply(1:length(indices), function(x) {
df3 <- df %>% arrange(desc(all_of(x)))
all(df3 == df)
})
indices <- colnames(df)[-c(1,2)]
sapply(1:length(indices), function(x) {
df3 <- df %>% arrange(desc(x))
all(df3 == df)
})
x <- colnames(df)[4] # second index
df2 <- df %>% arrange(desc(x))
df3 <- df %>% arrange(desc(Purchasing_Power_Index))
all(df2 == df3)
indices <- colnames(df)[-c(1,2)]
id <- sapply(1:length(indices), function(x) {
df1 <- df
colnames(df)[x + 2] <- "Col"
df3 <- df %>% arrange(desc(Col))
all(df3 == df)
})
indices[id]
df <- df %>% mutate(Country = City %>% str_split(",") %>%
sapply(function(x) {x[1]}))
View(df)
df %>% group_by(Country) %>%
summarise(Mean_index = mean(Quality_of_Life_Index)) %>%
arrange(desc(Mean_index)) %>%
head
View(df)
df <- df %>% mutate(Country = City %>% str_split(",") %>%
sapply(function(x) {x[2]}))
df %>% group_by(Country) %>%
summarise(Mean_index = mean(Quality_of_Life_Index)) %>%
arrange(desc(Mean_index)) %>%
head
df3 <- df %>% gather(key = "Index", value = "Score", -Rank, -Quality_of_Life_Index, -City, -Country)
ggplot(df3, aes(x = Score, y = Quality_of_Life_Index)) +
geom_point() +
facet_wrap(~Index, ncol = 3)
